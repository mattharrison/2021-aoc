* Day 1
** Errors
*** ValueError - Trailing value on input (off by one?) Resolution - Strip data
*** ValueError - Creating doctest and didn't make raw (find_increase_window)
*** RuntimeError - Using while loop in window_iter instead of for loop
*** Pandas read_csv - didn't make names a list
* Day 2
** Errors
*** AttributeError - Tried to call doctest.main (instead of testmod)
*** Depth is positive (I was treating as negative). Need to flip -
*** Pandas - read in first line as headers (use names)
*** Miscalculated pandas aim 
*** Used np.where instead of np.select
*** Lambda syntax error used . instead of :
* Day 3
** Errors
*** TypeError used Counter expecting value to be string instead of int
*** SyntaxError closing paren mismatch
*** TypeError > with function and list - forgot "key" for max function
*** Logic error list comprehension not working - change to for loop
*** SyntaxError closing paren mismatch (complicated key function)
*** Logic error solved, was using max([0,1] instead of max(['0', '1']
*** IndentationError copied code but not while loop
*** Logic error trying to sum where line[bit_pos] == 1 instead of line[bit_pos] == '1' 
*** Logic error finding least common. Changed logic and tested
* Day 4
** Errors
*** Typo - forgot trailing quote in docstring
*** Logic - When parsing I didn't split out elements in line
    boards = [lines[i:i+5] for i in range(2, len(lines), 6)]
*** Logic - Didn't convert strings to nums in data
*** Typo - list comp. forgot "for"
*** Logic - tried to cast list to int instead of items in list
*** Syntax - while not done:=False: needs parens
*** Off by n error -    num, *nums = nums exhausting
*** Syntax error setting conditional breakpoint Correct below: b line, exp
    b 88, num == 24
*** Syntax error - tried to use walrus with while loop,     while not (done:=False):
    Kept setting done to false
*** Downloaded wrong file... 
*** Logic error - max_index needed >= instead of >
*** Logic error - exhausted nums in part2 instead of removing boards when finished
*** Python error - looping over list (boards) and changing it
    Solution track finished and filter in loop
*** Logic error - part two wasn't tracking val
*** Typo - board_finish_index
*** Too many solutions need to wait
*** Part2 works on sample data but not real data
*** Convert to OO - Easy to work
* Day 5
** Errors
*** Logic error parsing data (forgot ,)
*** Error Sample got 2 instead of 5 (parsing error split src twice)
    Copy/paste error - forgot to change part of pasted
*** Logic error - summing count in values, rather than number of points
*** Type error - trying to get len of generator
*** Part2 enum_pts_in_line doesn't handle diagonal
*** Logic error - Created enum_pts then got 7 points instead of 12 for sample
    enum_pts countdown was backwards
*** Logic eror - enum_pts_in_line for diagonal put x,y in one call rather that x1,x2
* Day 6
** Errors
*** Part 1 w/ no issues
*** Part 2 started to run but I killed it
*** Incubation! - Track days to counts instead of individual fishes
*** RuntimeError - Looping over days added 8 and 7 need to seed those with 0
*** RuntimeError - Also need to seed 0 (and others w/ sample) - use set_default
*** typo - wrong variable in for loop (could be caught by editor)
*** typo - setdefaults (could be caught by editor)
*** Logic error - set next day value with addition rather than replacing
    Also loop over day nums from 7 to 0
*** typo - forgot in in range
*** Logic error - bubbled sum down - increase count from 0 to 8
*** Logic error - don't mutate dict, make new dict
*** Logic error - don't mutate dict, forgot to clear out new dict
*** Typo - Ran part two against sample data not real data
* Day 7
** Errors
*** Logic error - didn't calc abs only diff
*** Part 2 - recursion error (language problem)
*** Add caching (cache not in 3.8)
*** Logic error - recursion didn't handle 0. Print to debug. Could test
** Thoughts
*** Closed form formula - eliminate recursion
*** Convert recursion to non-recursive
* Day 8
** Errors
*** split on , instead of \n and |
*** logic error, hashing on set
*** typo - patter
*** logic error - empty result from get_mapping
    Was parsing all lines instead of single line
*** logic error - converted keys from sets to strings but left in set logic (<=
    Convert strings in inverted to sets
*** Sloppy error - didn't calculate digit 2
    Added logic
*** logic error - 0 and 9 broken
    Order of if statement for 0, 6, 9 wrong
*** typo - when changing order of if above didn't convert if to elif
*** Reading issue - Parsed everything but it looks like it is not needed for part 1
*** Part 2 logic issue - converted list of strings to int
* Day 9
** Errors
*** Logic error - parsing txt - was flattened instead of nested
*** Logic error - trying to calculate len of int instead of list
*** Off by one error - Checking with wrong variable x instead of x1
*** Reading error - didn't read that problem asked for 1 + minimums
*** Typo - Called method as if it were a function
*** Logic error - Flipped < (wrong way)
*** Logic error - When parsing map included new line (didn't call parse)
*** Typo - called get_basin as if it were a function
*** Typo - reduce args in wrong order
*** Logic error - trying to multiple namedtuple instead of value of namedtuple
*** Logic error - sliced off first 3 instead of last
* Day 10
** Errors
*** Typo - stplit
*** Part two - change find_illegal_move to return expected as well
*** Logic error - calculating score in part 2 needed to sort, take middle, and reveerse expected
* Day 11 - Work on gridder
** Errors
*** Import Error - test file couldn't see gridder change to grid
*** Logic Error - around method not working - 
    Change logic from nested loop to looping over tuples
*** Logic Error - thinking iter gave rows instead of points
    change from for row in self to for row in self.rows
*** Import Error - day11 can't find grids
*** Typo - += = instead of += 1
*** Logic Error - Parse returns Grid, trying to stick that into a Grid (again)
*** Typo - Copy doens't work with a generator (len called in Grid constructor)
            data.append([p.value] for p in row) instead of data.append([p.value for p in row])
*** Python issue - Default dataclass is not hashable
    x: int = field(hash=True)
    @dataclass(unsafe_hash=True)
*** Logic error - Hashing dataclass was broken needed
    
@dataclass(unsafe_hash=True)
class Point:
    x: int
    #x: int = field(hash=True)
    #y: int = field(hash=True)
    y: int
    value: object= field(hash=False)
    #value: object

*** Typo - Forgot )

*** Typo - part1_self
*** Logic - returned tuple of (grid, flashed) instead of just flashed but
    updated wrong call.
*** API error - part1 accepts txt not a grid
*** Type - Used BASIC instead of SAMPLe
*** Off by one - Part 2 real error - 381 too low - off by one error 382!
    Change range(1000) to range(1,1000)
** Adapt day 4 to use grid
*** Typo -  Grids instead of Grid
*** Syntax - Calling a list ie:  for row in grid.rows():
*** Logic - Forgot to add point_class to Grid call
*** Typo - cols() instead of columns()
*** Syntax - Grid.columns - index with self.rows[x, y] instead of self.rows[y][x]
*** Logic - Forgot to initialize done variable
** Part 2 subclass Grid
*** Typo - lines -> txt
*** Typo - BingoBoards (plural)
*** Logic Error - added grid_class parameter to signature but didn't use
*** Typo - refactoring to solved method (didn't change grid to self)
*** Typo - finish_round instead of finish_num
*** Typo or Logic - used min instead of max
* Day 12 -
** Errors
*** Typo - traceback instead of breakpoint
*** Typo - setdefault not providing value
*** API - calling .append with two parameters
*** Typo - nodes instead of self.nodes
*** Typo - changed children to others (but forgot some)
*** Logic error - Adding duplicate nodes in .add_nodes
*** Typo - df_visit forgot self.df_visit
*** Logic error - df_cormen not working - called return from recursive call
*** Typo - other -> others
*** Typo - Implment BFS from cormen - forgot to initialize
*** Typo - other -> others
*** Typo - txt -> SAMPLE in doctest
*** Typo - didn't add paths to recursive call to search_children
*** API - set list to result of .append!
*** Part 2
*** Typo -Added string .replace and forgot .
*** API -  needed .value in Counter
*** Typo - In part 2 forgot to call part 2 in recursive call
*** Logic - Forgot to handle start in part 2
*** Spent a lot of time on BFS DFS before implementing my own...
* Day 13
** Errors
*** Syntax - need parens around tuple in list comp
*** Typo - doctest.main
*** Logic - forgot double nesting on list comp
*** Logic - forgot to split on '\n'
*** Typo - used txt instead of pts in list comp
*** Logic (Sleepy) - used for x,y in line.split() instead of         x,y = line.split(',') 
*** Typo - grids instead of grid
*** Logic - getting max of (x,y) key in dictionary
    forgot key= !?!
*** Logic - Forgot to parse folds and split by \n again
*** Logic - calculated swap by max_x//2 - (x - max_x//2) instead of
    amount - (x-amount)
*** Reading - Anwser too high - Did all folds for part one instead
    of just one
*** Part 2 - Range error - swapped matrix[x][y] should be matrix[y][x]
    Also calculated max value but used range(max) instead of range(max+1)
*** Sloppy - Copying part1 to part2 didn't remove fold limit
*** Logic - Needed to recalculate max_x/y for each fold against new grid
* Day 14
** Typo - doctest txt instead of SAMPLE
** API - tried to do 
** Typo - Used Collection instead of instance for pairs.keys()
** API - Mutated pairs while looping over
** Logic - Create new count dictionary while looping over
** Typo - Changed signature of part1 but didn't update returns
** Typo - used pairs(pair) instead of pairs[pair]
** Logic - Need to track letter counts while iterating not calculating at end
** Logic - Counting letter counts only need to add new letter (to_insert)
* Day 15
** Errors
*** Used typing with emacs - no typos
*** Thought about simulated annealing, made some code
*** Decided to use a-star instead copied algo from wikipedia
*** Import - copied Grid over (to get completion), forgot to import field
*** Logic - Got no path parsing bad, called line.split (no need to split)
*** Typo - Adding debug printing for path forgot quotes around '*' 
*** Logic -  Adding debug printing for path set point to '*' instead of .value
    Typing finds this! (if you have types which I didn't for Grid.rows)
*** Logic - reconstruct_path - forgot to add initial point
*** Typo - calculating sum with gen exp. Used value instead of pt
*** Logic - calculating sum with gen exp. Took sum of each value instead of sum of all values
    (got generator instead of value)
*** Logic/Reading - calculating sum included initial point
*** API - for row in rows instead of for row in range(rows)
*** Off by one error - need to make it 5 times as big (repeat 4 times) not 5
*** Out of bounds - creating repeat_loop
    pulling out of vals instead of result
*** Typo - didn't change len_rows
*** Typo - didn't return new_rows
* Day 16
** Errors - Used pyright
*** Forgot - Forgot to add value as member of LiteralPacket
    add line self.value = value
    Dataclass would solve this
*** Off by one - needed data = binstr[pos+1:pos+5] instead of
            data = binstr[pos+1:pos+4]
*** Forgot to update length from pos to length in call to constructor
*** Doctest - trailing whitespace (editor flagged)
*** Logic Error - with OPERATOR1 trying to parse sub OperatorPacket (and there are not any)
*** Adding pytest - 
*** Typo - day16.frombin instead of day16.OperatorPacket.frombin
*** Added debug to frombin because version parsing failing
    This is because hex2bin is truncating left 0
*** Indentation error - stubbed out partial function and then started working on another function
*** Logic error - calculating ceiling_8
*** Typo - test = instead of ==
*** Sloppy - added subpacket_size to parameter but not instance
    Editor warns that it wasn't used
*** Logic error - parse_subpackets need to know when done.
*** Logic length parsing failed - going to add raw binary data
    Wasn't error, typo in test. pulled out p.subpackets[0] instead of p.subpackets[1]
*** Sloppy - forgot to add length to OperatorPacket
*** Sloppy - get_version_sum didn't add method to Literal
*** Typo - pytest parametrize used 'hexstr res' instead of 'hexstr, res'
*** Typo - pytest parameters, single list of tuples, not lists
*** Logic - part 2 trying to compare packets use total ordering

